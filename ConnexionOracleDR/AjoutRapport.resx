<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pgAAAABJRU5ErkJggg==
</value>
  </data>
</root>